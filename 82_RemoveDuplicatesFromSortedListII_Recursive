/*********************************************************************************
*FileName:82_RemoveDuplicatesFromSortedListII_Recursive
*Author : Javan_Z
*Version : 1.0
*Date : 2016.9.10
Good Recursive!
**********************************************************************************/
/**
* Definition for singly-linked list.
* struct ListNode {
*     int val;
*     ListNode *next;
*     ListNode(int x) : val(x), next(NULL) {}
* };
*/
class Solution {       
public:
	ListNode* deleteDuplicates(ListNode* head) {
		if (!head) return NULL;
		if (!head->next) return head;

		int val = head->val;
		ListNode* nex = head->next;

		if (nex->val != head->val) {       //保留当前位，所以是head-next=
			head->next = deleteDuplicates(nex);
			return head;
		}
		else {
			int tmp = nex->val;         
			while (nex&&nex->val == tmp) nex = nex->next;
			return deleteDuplicates(nex);   //去掉所有有重复元素的Node，所以直接return从nex结点开始的结果
		}
	}
};
