/*********************************************************************************
*FileName:86_PartitionList_TwoPointers
*Author : Javan_Z
*Version : 1.0
*Date : 2016.9.10
Very concise way to use 2 pointers p1/p2 to build 2 lists respectively, and connect
them together~
**********************************************************************************/
/**
* Definition for singly-linked list.
* struct ListNode {
*     int val;
*     ListNode *next;
*     ListNode(int x) : val(x), next(NULL) {}
* };
*/
class Solution {
public:
	ListNode* partition(ListNode* head, int x) {
		ListNode node1(0), node2(0);
		ListNode *p1 = &node1, *p2 = &node2;  //在第一次相当于node->指向了下一个位置
		while (head) {
			if (head->val<x)
				p1 = (p1->next = head);
			else
				p2 = (p2->next = head);
			head = head->next;
		}
		p2->next = NULL;
		p1->next = node2.next;
		return node1.next;
	}
};
