/*********************************************************************************
*FileName:72_EditDistance_DP_Improved
*Author: 
*Version:
*Date:  2016.8.18
20ms, beats 78.91%
Other people's dp code, for reference 
**********************************************************************************/
class Solution {     //注意代码的初始状态j==0的情况,需要pre放一下
public:              //注意swap的使用很巧妙~
	int minDistance(const string &word1, const string& word2) {
		int * dp = new int[word2.size() + 1];
		int pre; // dp[i-1][j-1]
		for (int i = 0; i <= word1.size(); ++i)
		{

			for (int j = 0; j <= word2.size(); ++j)
			{
				if (i == 0)
				{
					dp[j] = j;
				}
				else if (j == 0)
				{
					pre = i - 1;
					dp[j] = i;
				}
				else if (word1[i - 1] == word2[j - 1])
				{
					swap(dp[j], pre);
				}
				else {
					int tmp = dp[j];
					dp[j] = min(dp[j], min(dp[j - 1], pre)) + 1;
					pre = tmp;
				}

			}
		}
		return dp[word2.size()];
	}
};
