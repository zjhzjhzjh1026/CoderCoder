/*********************************************************************************
*FileName:76_MinimumWindowSubstring_Template
*Author : Javan_Z
*Version : 1.0
*Date : 2016.9.4
9ms, beats 100%
Use substring-finding template~
**********************************************************************************/
#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Solution {
public:
	string minWindow(string s, string t) {
		int begin = 0, end = 0, minLen = INT_MAX, count = t.size(), start = 0;
		vector<int> map(128, 0);
		for (auto c : t) map[c]++;
		while (end<s.size()) {
			if (map[s[end++]]-->0) count--;
			while (!count) {
				if (end - begin<minLen) minLen = end - (start = begin);
				if (map[s[begin++]]++ == 0) count++;
			}
		}
		return minLen == INT_MAX ? "" : s.substr(start, minLen);
	}
};

int main() {
	Solution t;
	string ans = t.minWindow("ADOBECODEBANC", "ABC");
	cout << ans << endl;
	system("pause");
	return 0;
}
