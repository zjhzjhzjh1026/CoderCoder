/*********************************************************************************
  *FileName:21_MergeTwoSortedLists
  *Author:  Javan_Z
  *Version: 1.0
  *Date:  2016.5.27
  0ms, Use Stack to do the match 
**********************************************************************************/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* p;
        if(!l1)
          return l2;
        else if(!l2)
          return l1;
        if(l1->val<=l2->val){    
            p=l1;
            l1=l1->next;
        }
        else{
            p=l2;
            l2=l2->next;
        }
        ListNode* head=p;  //记录新头结点 
        while(l1&&l2){
            if(l1->val<=l2->val){
            p->next=l1;
            l1=l1->next;
            p=p->next;
        }
            else{
            p->next=l2;
            l2=l2->next;
            p=p->next;
        }
    }
        if(l1)
          p->next=l1;
        else 
          p->next=l2;
        return head;
    }
};
