/*********************************************************************************
  *FileName:34_SearchForARange_O(n)
  *Author:  Javan_Z
  *Version: 1.0
  *Date:  2016.6.14
  16ms, beats 3.83%  O(N),binary search and iterative
**********************************************************************************/
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int i=0,j=nums.size()-1,mid=(i+j)/2,len=nums.size();
        vector<int> res(2,-1);
        while(i<j){
            if(target==nums[mid])
              break;
            else if(target<nums[mid]){
                j=mid-1;
            }
            else
                i=mid+1;
            mid=(i+j)/2;
        }
        if(target!=nums[mid]){
           return res;  
        }
        else{
            int left=mid,right=mid;
            while(target==nums[left-1]&&left>0)
              left--;
            while(target==nums[right+1]&&right<len-1)
              right++;
            res[0]=left;
            res[1]=right;
        }
        return res;
    }
};
