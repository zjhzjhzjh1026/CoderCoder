/*********************************************************************************
*FileName:113_PathSumII_CleanCode
*Author : Javan_Z
*Version : 2.0
*Date : 2016.9.29
**********************************************************************************/
/**
* Definition for a binary tree node.
* struct TreeNode {
*     int val;
*     TreeNode *left;
*     TreeNode *right;
*     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
* };
*/
class Solution {
public:
	vector<vector<int>> pathSum(TreeNode* root, int sum) {
		vector<vector<int>> ans;
		if (!root) return ans;
		vector<int> comb;
		helper(root, sum, ans, comb);
		return ans;
	}

	void helper(TreeNode* node, int sum, vector<vector<int>>& ans, vector<int> comb) {
		if (!node)  return;
		comb.push_back(node->val);
		if (!node->left && !node->right&&sum == node->val) ans.push_back(comb);
		helper(node->left, sum - node->val, ans, comb);
		helper(node->right, sum - node->val, ans, comb);
	}
};
