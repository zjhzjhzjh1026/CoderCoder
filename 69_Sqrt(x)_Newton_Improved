/*********************************************************************************
*FileName:69_Sqrt(x)_Newton_Improved
*Author:  Javan_Z
*Version: 4.0
*Date:  2016.8.17
8ms, beats 51.63%,fastest
Newton Method: X(n+1)=X(n)-f(x)/f'(x), i.e. x(n+1)=x(n)-(x^2-n)/(2*x)
**********************************************************************************/
class Solution {
public:
	int mySqrt(int x) {
		int x1;
		int s, g0, g1;
		if (x <= 1) return x;
		s = 1;
		x1 = x - 1;
		if (x1 > 65535) { s += 8; x1 >>= 16; }  //平方根，所以只加次方数的一半
		if (x1 > 255) { s = s + 4; x1 >>= 8; }
		if (x1 > 15) { s += 2; x1 >>= 4; }
		if (x1 > 3) { s += 1; }

		g0 = 1 << s;
		g1 = (g0 + (x >> s)) >> 1;    //初值估算

		while (g1 < g0) {     //Newton Iteration
			g0 = g1;
			g1 = (g0 + (x / g0)) >> 1;
		}
		return g0;
	}
};

