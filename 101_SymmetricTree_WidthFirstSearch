/*********************************************************************************
*FileName:101_SymmetricTree_WidthFirstSearch
*Author : Javan_Z
*Version : 1.0
*Date : 2016.9.23
**********************************************************************************/
/**
* Definition for a binary tree node.
* struct TreeNode {
*     int val;
*     TreeNode *left;
*     TreeNode *right;
*     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
* };
*/
class Solution {
public:
	bool isSymmetric(TreeNode* root) {
		return judge(root, root);
	}

	bool judge(TreeNode* node1, TreeNode* node2) {
		if (!node1 && !node2) return true;
		if (!node1 || !node2) return false;
		if (node1->val == node2->val)  return judge(node1->left, node2->right) && judge(node2->left, node1->right);
		else return false;
	}
};
