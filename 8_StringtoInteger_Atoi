/*********************************************************************************
  *FileName:8_String to Integer (atoi)
  *Author:  WILL
  *Version: 1.0
  *Date:  2016.5.13
   8ms. beats 67.28%  Carefully consider all possible input cases!!!! 
**********************************************************************************/
class Solution {
public:
    int myAtoi(string str) {
        int i=0;
        long long ans=0;
        bool flag=true;
        while(str[i]==' ') i++;    //whitespace or str.find_first_not_of(' ');
        if(str[i]=='-'){
            flag=false;
            i++;
        }
        else if(str[i]=='+'){      //前导+号 
            i++;
        }
        while(str[i]>='0'&&str[i]<='9'){   //遇到非数字字符便终止   换成isdigit函数之后 时间从8ms上升到20ms？？？
            ans=ans*10+(str[i]-'0');
            if(ans>INT_MAX||ans<INT_MIN)   //防止long long int越界 
             break;
            i++;
        }
       ans=flag?ans:-ans;

       ans=ans>INT_MAX?INT_MAX:ans;        //超过INT_MIN到INT_MAX范围的输出上限或者下限 
       ans=ans<INT_MIN?INT_MIN:ans;
       return ans;
    }
};
