/*********************************************************************************
  *FileName:18_4Sum_v16ms 
  *Author:  Javan_Z
  *Version: 2.0
  *Date:  2016.5.27
  O(N^3),16ms, beats 91.80%
**********************************************************************************/
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;
        int len=nums.size();
        if(len<4)  
          return ans;
        for(int i=0;i<len-3;i++){   //提升效率的关键三行 
          if(i>0&&nums[i]==nums[i-1]) continue;   //最小值位排除重复 
          if(nums[i]+nums[i+1]+nums[i+2]+nums[i+3]>target) break; //已不可能==，故结束掉 
          if(nums[i]+nums[len-3]+nums[len-2]+nums[len-1]<target) continue; //极端情况仍小，直接跳过进行下一次尝试 
          
          for(int j=i+1;j<len-2;j++){
               if(j>i+1&&nums[j]==nums[j-1]) continue;
                if(nums[i]+nums[j]+nums[j+1]+nums[j+2]>target) break;
                if(nums[i]+nums[j]+nums[len-2]+nums[len-1]<target) continue;
                
              int tar=target-nums[i]-nums[j];
              int front=j+1;
              int rear=len-1;
              while(front<rear){
                  int temp=nums[front]+nums[rear];
                  if(temp<tar)
                    front++;
                  else if(temp>tar)
                    rear--;
                  else{
                    vector<int> temp(4);
                    temp[0]=nums[i];
                    temp[1]=nums[j];
                    temp[2]=nums[front];
                    temp[3]=nums[rear];
                    ans.push_back(temp);
                  while(front<rear&&nums[front]==temp[2]) //注意这段一定要在else里面
                    front++;
                  while(front<rear&&nums[rear]==temp[3])
                    rear--;
                  }
              }
          }
        }
          return ans;
    }
};
