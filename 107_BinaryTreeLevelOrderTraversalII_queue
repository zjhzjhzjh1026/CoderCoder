/*********************************************************************************
*FileName:107_BinaryTreeLevelOrderTraversalII_queue
*Author : Javan_Z
*Version : 1.0
*Date : 2016.9.27
**********************************************************************************/
/**
* Definition for a binary tree node.
* struct TreeNode {
*     int val;
*     TreeNode *left;
*     TreeNode *right;
*     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
* };
*/
class Solution {
public:
	vector<vector<int>> levelOrderBottom(TreeNode* root) {
		vector<vector<int>> ans;
		queue<TreeNode*> st;
		if (!root) return ans;
		st.push(root);
		while (!st.empty()) {
			int levelNum = st.size();
			vector<int> tmp;
			for (int i = 0; i<levelNum; i++) {
				if (st.front()->left) st.push(st.front()->left);
				if (st.front()->right) st.push(st.front()->right);
				tmp.push_back(st.front()->val);
				st.pop();
			}
			ans.insert(ans.begin(), tmp); 
		}
		return ans;
	}
};
