/*********************************************************************************
  *FileName:25_ReverseNodesInKGroup 
  *Author:  Javan_Z
  *Version: 1.0
  *Date:  2016.5.29
  24ms, beats 41.82%
**********************************************************************************/
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head==NULL||k==1) return head;
        ListNode* pre=new ListNode(-1);
        pre->next=head;
        ListNode *prehead=pre,*a,*b,*cur=pre;//prehead用于记录List的头结点，相当于dummy 
        int count=0;
        while(cur=cur->next)
          count++;
        while(count>=k){
            a=pre->next;
            b=a->next;
                        
            for(int i=1;i<k;i++){
                a->next=b->next;      //交换部分 
                b->next=pre->next;   //注意这里不是a，是pre->next
                pre->next=b;
                b=a->next;
            }

            pre=a;
            count-=k;
        }
        return prehead->next;
    }
};
