/*********************************************************************************
  *FileName:18_4Sum
  *Author:  Javan_Z
  *Version: 1.0
  *Date:  2016.5.27
  O(N^3),72ms, beats 67.61%
**********************************************************************************/
class Solution {      //思路同3Sum 
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;
        for(int i=0;i<nums.size();i++){
          for(int j=i+1;j<nums.size();j++){
              int tar=target-nums[i]-nums[j];
              int front=j+1;
              int rear=nums.size()-1;
              while(front<rear){
                  int temp=nums[front]+nums[rear];
                  if(temp<tar)
                    front++;
                  else if(temp>tar)
                    rear--;
                  else{
                    vector<int> temp(4);
                    temp[0]=nums[i];
                    temp[1]=nums[j];
                    temp[2]=nums[front];
                    temp[3]=nums[rear];
                    ans.push_back(temp);
                  while(front<rear&&nums[front]==temp[2]) //注意这段一定要在else里面
                    front++;
                  while(front<rear&&nums[rear]==temp[3])
                    rear--;
                  }
              }
              while(j+1<nums.size()&&nums[j]==nums[j+1])
                j++;
          }
              while(i+1<nums.size()&&nums[i]==nums[i+1])
                i++;
        }
          return ans;
    }
};
