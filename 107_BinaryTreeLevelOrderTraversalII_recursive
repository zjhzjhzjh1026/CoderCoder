/*********************************************************************************
*FileName:107_BinaryTreeLevelOrderTraversalII_recursive
*Author : Javan_Z
*Version : 2.0
*Date : 2016.9.27
much more faster!
**********************************************************************************/
/**
* Definition for a binary tree node.
* struct TreeNode {
*     int val;
*     TreeNode *left;
*     TreeNode *right;
*     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
* };
*/
class Solution {
public:
	vector<vector<int>> levelOrderBottom(TreeNode* root) {
		helper(root, 0);
		reverse(ans.begin(), ans.end());
		return ans;
	}
private:
	vector<vector<int>> ans;
	void helper(TreeNode* node, int level) {
		if (!node) return;
		if (level >= ans.size()) ans.push_back(vector<int>());
		ans[level].push_back(node->val);
		helper(node->left, level + 1);
		helper(node->right, level + 1);
		return;
	}
};
