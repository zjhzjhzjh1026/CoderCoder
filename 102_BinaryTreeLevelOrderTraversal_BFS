/*********************************************************************************
*FileName:102_BinaryTreeLevelOrderTraversal_BFS
*Author : Javan_Z
*Version : 2.0
*Date : 2016.9.25
**********************************************************************************/
/**
* Definition for a binary tree node.
* struct TreeNode {
*     int val;
*     TreeNode *left;
*     TreeNode *right;
*     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
* };
*/
class Solution {
public:
	vector<vector<int>> levelOrder(TreeNode* root) {
		queue<TreeNode*> que;
		vector<vector<int>> ans;
		if (root == NULL) return ans;
		que.push(root);
		while (!que.empty()) {
			int sizeOfThisLevel = que.size();    //每次将该层的所有节点的左右子节点放入queue中，并完成对该层的操作
			vector<int> tmp;
			for (int i = 0; i<sizeOfThisLevel; i++) {
				if (que.front()->left) que.push(que.front()->left);
				if (que.front()->right) que.push(que.front()->right);
				tmp.push_back(que.front()->val);
				que.pop();
			}
			ans.push_back(tmp);
		}
		return ans;
	}
};
