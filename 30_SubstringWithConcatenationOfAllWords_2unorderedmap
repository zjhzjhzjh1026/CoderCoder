/*********************************************************************************
  *FileName:30_SubstringWithConcatenationOfAllWords_2unorderedmap 
  *Author:  Javan_Z
  *Version: 1.0
  *Date:  2016.6.4
  620ms, beats 59.91%
**********************************************************************************/
class Solution {
public:
    vector<int> findSubstring(string s, vector<string>& words) {
        int s_len=s.size(),num=words.size(),len=words[0].size();
        vector<int> res;
        unordered_map<string,int> count;  //count用于存放words中每个word的数量 
        for(int i=0;i<num;i++)
            count[words[i]]++;
        for(int i=0;i<s_len-num*len+1;i++){
            int j;               
            unordered_map<string,int> match;
            for(j=0;j<num;j++){
               string temp=s.substr(i+j*len,len);
               match[temp]++;
              // cout<<temp<<endl;
               if(match[temp]>count[temp])  //如果有多余的字符串，直接break进行下一组子串 
                 break;
            }
            // cout<<j<<num<<endl;
            if(j==num) 
            res.push_back(i);
        }
        return res;
    }
};
